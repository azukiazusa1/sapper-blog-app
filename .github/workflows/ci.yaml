name: CI
on:
  pull_request:

env:
  API_KEY: ${{ secrets.PREVIEW_API_KEY }}
  PREVIEW_API_KEY: ${{ secrets.PREVIEW_API_KEY }}
  SPACE: ${{ secrets.PREVIEW_SPACE }}
  ENVIRONMENTS: test
  PUBLIC_BASE_URL: http://localhost:3000
  PUBLIC_ANALYTICS_ID: ""
  GITHUB_TOKEN: ""
  PRIVATE_KEY: ""
  CLIENT_EMAIL: ""
  PROPERTY_ID: ""
  NODE_ENV: development
  # Turborepo Remote Cache
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

jobs:
  eslint:
    name: eslint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: npm
      - uses: actions/cache@v4
        id: node_modules_cache_id
        env:
          cache-name: cache-node-modules
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: ${{ steps.node_modules_cache_id.outputs.cache-hit != 'true' }}
        run: npm ci
      - name: Run lint
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
        run: npm run lint
  typecheck:
    name: typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: npm
      - uses: actions/cache@v4
        id: node_modules_cache_id
        env:
          cache-name: cache-node-modules
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: ${{ steps.node_modules_cache_id.outputs.cache-hit != 'true' }}
        run: npm ci
      - name: Run typecheck
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
        run: npm run typecheck
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: npm
      - uses: actions/cache@v4
        id: node_modules_cache_id
        env:
          cache-name: cache-node-modules
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: ${{ steps.node_modules_cache_id.outputs.cache-hit != 'true' }}
        run: npm ci
      - name: Run test
        run: npm run test
        env:
          MANAGEMENT_TOKEN: management-token
          SPACE: space
          ENVIRONMENTS: environments
          OPENAI_API_KEY: openai-api-key
